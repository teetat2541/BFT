// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id            Int       @id @default(autoincrement())
  fname         String
  lname         String
  tel           String
  positionId    Int
  position      position  @relation(fields: [positionId], references: [id])
  datestartwork DateTime @db.Date
  salary        Int?
}

model position {
  id    Int    @id @default(autoincrement())
  name  String
  users user[]
}

model building {
  id            Int  @id @default(autoincrement())
  b_type        String
  b_name        String
  repairs       repair[]
  productTransactions productTransaction[]
}

model repair {
  id                Int    @id @default(autoincrement())
  createdAt         DateTime  @default(now())
  buildingId        Int
  building          building  @relation(fields: [buildingId], references: [id])
  problem_img       String
  problem_place     String
  problem_detail    String
  status            Status    @default(inProgress)
  updatedAt         DateTime  @updatedAt
  rp_img            String?
}
enum Status {
  inProgress
  completed
  cancelled
}
model supplier {
  id            Int    @id @default(autoincrement()) 
  s_name        String
  line          String
  tel           String
  productTransactions productTransaction[]
}
model product {
  id            Int    @id @default(autoincrement())
  p_type        String
  p_name        String
  productTransactions productTransaction[]
}

model productTransaction {
  id                Int    @id @default(autoincrement())
  date              DateTime  @default(now())
  supplierId        Int
  supplier          supplier  @relation(fields: [supplierId], references: [id])
  buildingId        Int
  building          building  @relation(fields: [buildingId], references: [id])
  productId         Int
  product           product  @relation(fields: [productId], references: [id])
  transactiontype   transactiontype
  quantity          Int
}
enum transactiontype {
  add
  withdraw
}

